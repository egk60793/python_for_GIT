import requests
from bs4 import BeautifulSoup

HEADERS = {
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36',
    'accept': '*/*'
}
params = None


# –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –¥–æ–±—ã—á–∞ –Ω–µ—Ñ—Ç–∏
def oil():
    url = 'https://ru.investing.com/economic-calendar/eia-crude-oil-inventories-75'
    r = requests.get(url, headers=HEADERS, params=params)
    soup = BeautifulSoup(r.content, 'lxml')

    oil_prod = soup.find('div', id='releaseInfo').find_all('span')
    a = []
    for i in oil_prod:
        a.append(i.find('div').text)

    return f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–ø—É—Å–∫: {a[0]}\n–§–∞–∫—Ç.: {a[1]}\n–ü—Ä–æ–≥–Ω–æ–∑: {a[2]}\n–ü—Ä–µ–¥.: {a[3]}"


# print(oil())


# –£—Ä–æ–≤–µ–Ω—å –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã –≤ –°–®–ê
def unemployment():
    url = 'https://ru.investing.com/economic-calendar/unemployment-rate-300'
    r = requests.get(url, headers=HEADERS, params=params)
    soup = BeautifulSoup(r.content, 'lxml')

    unpl = soup.find('div', id='releaseInfo').find_all('span')
    a = []
    for i in unpl:
        a.append(i.find('div').text)
    return f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–ø—É—Å–∫: {a[0]}\n–§–∞–∫—Ç.: {a[1]}\n–ü—Ä–æ–≥–Ω–æ–∑: {a[2]}\n–ü—Ä–µ–¥.: {a[3]}"


# print(unemployment())


# –†–µ—à–µ–Ω–∏–µ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞–≤–∫–µ –§–†–° –°–®–ê
def rate():
    url = 'https://ru.investing.com/economic-calendar/interest-rate-decision-168'
    r = requests.get(url, headers=HEADERS, params=params)
    soup = BeautifulSoup(r.content, 'lxml')

    rate = soup.find('div', id='releaseInfo').find_all('span')
    a = []
    for i in rate:
        a.append(i.find('div').text)
    return f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–ø—É—Å–∫: {a[0]}\n–§–∞–∫—Ç.: {a[1]}\n–ü—Ä–æ–≥–Ω–æ–∑: {a[2]}\n–ü—Ä–µ–¥.: {a[3]}"


# print(rate())

# –í–í–ü –°–®–ê
def GDP():
    url = 'https://ru.investing.com/economic-calendar/gdp-375'
    r = requests.get(url, headers=HEADERS, params=params)
    soup = BeautifulSoup(r.content, 'lxml')

    gdp = soup.find('div', id='releaseInfo').find_all('span')
    a = []
    for i in gdp:
        a.append(i.find('div').text)
    return f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–ø—É—Å–∫: {a[0]}\n–§–∞–∫—Ç.: {a[1]}\n–ü—Ä–æ–≥–Ω–æ–∑: {a[2]}\n–ü—Ä–µ–¥.: {a[3]}"


# print(GDP())


import telebot

# –ö–Ω–æ–ø–∫–∏
keyboard = telebot.types.ReplyKeyboardMarkup(True)
keyboard.row('–î–æ–±—ã—á–∞ üõ¢', '–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞ ü§∑‚Äç‚ôÇÔ∏è', '–°—Ç–∞–≤–∫–∞ üìç', '–í–í–ü üìä')
bot = telebot.TeleBot('TOKEN')


# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ?', reply_markup=keyboard)


# –ö–æ–º–∞–Ω–¥—ã –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.message_handler(content_types=['text'])
def any_key(message):
    if message.text == '–î–æ–±—ã—á–∞ üõ¢':
        bot.send_message(message.chat.id, oil())
    elif message.text == '–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞ ü§∑‚Äç‚ôÇÔ∏è':
        bot.send_message(message.chat.id, unemployment())
    elif message.text == '–°—Ç–∞–≤–∫–∞ üìç':
        bot.send_message(message.chat.id, rate())
    elif message.text == '–í–í–ü üìä':
        bot.send_message(message.chat.id, GDP())
    else:
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É')


bot.polling(none_stop=True)

